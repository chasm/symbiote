{"version":3,"file":"/server/accounts.coffee.js","sources":["accounts.coffee"],"names":[],"mappings":";AAAA,CAAS,CAAuB,CAAV,KAAd,CAAe,GAAvB;CACE;GAAW,CAAI,EAAgB,EAA/B;EAEA,CACE,CADF;CACE,CACE,EADF;CACE,CAAM,EAAN;KADF;CAHF;EAMA,CACE,CADF;CACE,CACE,EADF;CACE,CACE,IADF;CACE,CAAU,MAAV;OADF;KADF;CAPF;EAWA,CACE,CADF;CACE,CACE,EADF;CACE,CACE,IADF;CACE,CAAU,MAAV;OADF;KADF;CAZF;EAgBA,CAAe,IAAO,KAAtB;CAhBA,CAiBA,CAAY,IAAO,EAAnB;CAEA,EAAyB,CAAtB,KAAoC,GAAxB;CACb,EAAS,CAAT;GACU,CAAV,EADA,CACA;CADA,EAGc,CAAd,EAAkC,EAAP,GAA3B;CAHA,CAME,CADO,CAAT,yBAAS;CACP,CACE,IADF;CACE,CAAc,MAAd;QADF;EAGE,IADF;CACE,CAAc,MAAd;OAHF;CANF,KAKS;CAKT,KAA4B;CAA5B,KAAY,MAAN;KAVN;EAaE,CADa,CAAf,CAAe,CAAa,CAA5B,KAAe;CAZf,EAeE,CADF,GAAY;CACV,CACE,IADF;EAGE,IADF;CAjBF;EAoBkB,EAAlB;CACE;GAAS,GAAT,CAAgB;CACf,CAAuB,EAAxB,EAAa,EAAb,CAAyB,IAAzB;CACE,GAAG,CAAc,GAAjB;CACE,CAAsB,CAAtB,IAAO,GAAP;CAAsB,CACpB,GADoB;CACpB,CACE,QADF;CACE,CAAK,CAAL,CAAS,YAAT;EACM,EAAN;eAFF;aADoB;CAAtB;GAIqB,CAAjB,CAAJ,EAAY,GAAZ;CAJA,EAKoB,CAAhB,GAAQ,GAAZ;CACQ,CAAc,CAAtB,IAAO,UAAP;CAAsB,CACpB,GADoB;CACpB,CACE,MADF;CACE,CAAU,MAAV;eADF;aADoB;CAPxB,WAOE;SARoB;CAAxB,MAAwB;CAF1B,IAAkB;CApBlB,CAkCqB,EAArB,KAAsB,GAAtB;CACE;GAAS,GAAT,CAAgB;CACf,CAA0B,EAA3B,EAAa,GAAe,EAA5B;CACE,GAAG,CAAc,GAAjB;CACE,CAAsB,CAAtB,IAAO,GAAP;CAAsB,CACpB,GADoB;CACpB,CACE,WADF;CACE,CAAK,CAAL,CAAS,YAAT;EACM,EAAN;eAFF;aADoB;CAAtB;GAIqB,CAAjB,CAAJ,EAAY,GAAZ;CAJA,EAKoB,CAAhB,GAAQ,GAAZ;CACQ,CAAc,CAAtB,IAAO,UAAP;CAAsB,CACpB,GADoB;CACpB,CACE,SADF;CACE,CAAM,EAAN;eADF;aADoB;CAPxB,WAOE;SARuB;CAA3B,MAA2B;CAF7B,IAAqB;CAnCvB,UAiDE;IAjDF;CAmDE,IAAM;GAvEY;;A","sourcesContent":["Accounts.onCreateUser (options, user) ->\n  username = user.services.github.username\n\n  flds =\n    fields:\n      name: true\n\n  iqry =\n    instructors:\n      $elemMatch:\n        username: username\n\n  sqry =\n    students:\n      $elemMatch:\n        username: username\n\n  asInstructor = Cohorts.find(iqry, flds).fetch()\n  asStudent = Cohorts.find(sqry, flds).fetch()\n\n  if asInstructor.length > 0 or asStudent.length > 0\n    result = undefined\n    profile = undefined\n\n    accessToken = user.services.github.accessToken\n\n    result = Meteor.http.get \"https://api.github.com/user\",\n      params:\n        access_token: accessToken\n      headers:\n        \"User-Agent\": \"Meteor/1.0\"\n    throw result.error if result.error\n\n    user.profile = _.pick result.data,\n      \"name\", \"email\", \"login\", \"avatar_url\", \"url\"\n    user.profile.cohorts =\n      asInstructor:\n        asInstructor\n      asStudent:\n        asStudent\n\n    _.each asStudent, (c) ->\n      cohort = Cohorts.findOne(c._id)\n      _.each cohort.students, (s) ->\n        if s.username == username\n          Cohorts.update c._id, $push:\n            studentIds:\n              _id: user._id\n              name: s.name\n          user.profile.email = s.email\n          user.profile.name = s.name\n          Cohorts.update c._id, $pull:\n            students:\n              username: s.username\n\n    _.each asInstructor, (c) ->\n      cohort = Cohorts.findOne(c._id)\n      _.each cohort.instructors, (s) ->\n        if s.username == username\n          Cohorts.update c._id, $push:\n            instructorIds:\n              _id: user._id\n              name: s.name\n          user.profile.email = s.email\n          user.profile.name = s.name\n          Cohorts.update c._id, $pull:\n            instructors:\n              name: s.name\n\n    user\n  else\n    throw Error(\"No user!\")\n"]}